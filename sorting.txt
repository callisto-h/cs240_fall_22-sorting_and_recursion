https://visualgo.net/en/sorting

// bubble sort
do
    swapped = false
    for i = 1 to indexOfLastUnsortedElement -1
        if leftElement > rightElement
            swap(leftElement, rightElement)
            swapped = true
while(swapped)

// selection sort
repeat (numOfElements -1) times
    set the first unsorted element as the minimum for each of the unsorted elements
    if element < currentMinimum
        set element as new minumum
    swap minimum with first unsorted position

// Insertion sort
mark first element as sorted
for each unsorted element X
    'extract' the element X
    for j = lastSortedIndex down to 0
        if current element j > X
            move sorted element to the right by 1
        else
            break loop and insert X here

// Merge sort
split each element into paritions of size 1
recursively merge adjacent partitions
    for i = leftPartIdx to rightPartIdx
        if leftPartHeadValue <= rightPartHeadValue
            copy leftPartHeadValue
        else
            copy rightPartHeadValue
copy elements back to original array

// Quick sort
for each (unsorted) partition
    set first element as pivot
    storeIndex = pivotIndex + 1
    for i = pivotIndex + 1 to rightMostIndex
        if element[i] < element[pivot]
            swap(i, storeIndex)
            storeIndex++
    swap(pivot, storeIndex - 1)

